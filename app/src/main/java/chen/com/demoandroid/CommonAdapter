
public abstract class CommonAdapter<T> extends RecyclerView.Adapter<RecyclerView.ViewHolder> {
  private static final int TYPE_ITEM = 0;
  private static final int TYPE_FOOTER = 1;
  protected Context mContext;
  protected int mLayoutId;
  protected List<T> mDatas;
  protected LayoutInflater mInflater;

  public CommonAdapter(Context context, int layoutId, List<T> datas) {
    mContext = context;
    mInflater = LayoutInflater.from(context);
    mLayoutId = layoutId;
    mDatas = datas;
  }

  @Override public RecyclerView.ViewHolder onCreateViewHolder(final ViewGroup parent, int viewType) {

    if (viewType == TYPE_FOOTER) {
      View view = mInflater.inflate(R.layout.item_footer, parent, false);
      return new FooterViewHolder(view);
    } else {
      View view = mInflater.inflate(mLayoutId, parent, false);
      return new ViewHolder(view);
    }
  }

  @Override public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
    if (position < mDatas.size()) {
      convert((ViewHolder) holder, mDatas.get(position));
    }
  }

  //    摆放数据只能在用的时候才写
  public abstract void convert(ViewHolder holder, T t);

  @Override public int getItemCount() {
    return mDatas.size() + 1;
  }

  //是底部iewType为TYPE_FOOTER，不是底部viewType为TYPE_ITEM
  @Override public int getItemViewType(int position) {
    if (position == getItemCount() - 1) {
      return TYPE_FOOTER;
    } else {
      return TYPE_ITEM;
    }
  }

  //    底部的ViewHolder
  class FooterViewHolder extends RecyclerView.ViewHolder {
    public FooterViewHolder(View itemView) {
      super(itemView);
    }
  }
}
